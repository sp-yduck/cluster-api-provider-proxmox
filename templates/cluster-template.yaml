apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  name: "${CLUSTER_NAME}"
spec:
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
    kind: ProxmoxCluster
    name: "${CLUSTER_NAME}"
  controlPlaneRef:
    apiVersion: controlplane.cluster.x-k8s.io/v1beta1
    kind: KubeadmControlPlane
    name: "${CLUSTER_NAME}"
  controlPlaneEndpoint:
    host: "${CONTROLPLANE_HOST}"
    port: 6443

---

apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: ProxmoxCluster
metadata:
  name: "${CLUSTER_NAME}"
spec:
  controlPlaneEndpoint:
    host: "${CONTROLPLANE_HOST}"
    port: 6443
  serverRef: 
    endpoint: "${PROXMOX_URL}"
    secretRef:
      name: "${CLUSTER_NAME}"
  nodeRefs:
    - name: mynode
      secretRef:
        name: "${CLUSTER_NAME}"
  storage:
    name: "${CLUSTER_NAME}"
    path: ""

---

apiVersion: controlplane.cluster.x-k8s.io/v1beta1
kind: KubeadmControlPlane
metadata:
  name: "${CLUSTER_NAME}"
spec:
  kubeadmConfigSpec:
    clusterConfiguration:
      etcd:
        local:
          dataDir: /var/lib/etcd
      networking:
        dnsDomain: cluster.local
        serviceSubnet: 10.96.0.0/12
        podSubnet: 10.98.0.0/16
    initConfiguration:
      localAPIEndpoint:
        advertiseAddress: "${CONTROLPLANE_HOST}"
        bindPort: 6443
      nodeRegistration:
        criSocket: unix:///var/run/containerd/containerd.sock
    postKubeadmCommands:
    - "curl -L https://dl.k8s.io/release/v1.27.3/bin/linux/amd64/kubectl -o /usr/local/bin/kubectl"
    - "chmod +x /usr/local/bin/kubectl"
    - "reboot now"
    preKubeadmCommands: []
  machineTemplate:
    infrastructureRef:
      apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
      kind: ProxmoxMachineTemplate
      name: ${CLUSTER_NAME}-controlplane
  replicas: 1
  version: v1.26.5

---

apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: ProxmoxMachineTemplate
metadata:
  name: ${CLUSTER_NAME}-controlplane
spec:
  template:
    spec:
      image:
        url: https://cloud-images.ubuntu.com/jammy/current/jammy-server-cloudimg-amd64-disk-kvm.img
        checksum: 86e996f35732d26cd8b0888c46c4309d4d3b04eb6980378cf82b4d3eb2796549
        checksumType: sha256
      hardware:
        cpu: 4
        memory: 8192
      network:
        ipConfig:
          gateway: ${GATEWAY_ADDRESS}
          ip: "${CONTROLPLANE_HOST}/32"
        nameServer: ${NAMESERVER_ADDRESS}
      cloudInit:
        user:
          packages:
          - socat
          - conntrack
          writeFiles:
          - path: /etc/modules-load.d/k8s.conf
            owner: root:root
            permissions: "0640"
            content: overlay\nbr_netfilter
          - path: /etc/sysctl.d/k8s.conf
            owner: root:root
            permissions: "0640"
            content: |
              net.bridge.bridge-nf-call-iptables  = 1
              net.bridge.bridge-nf-call-ip6tables = 1
              net.ipv4.ip_forward                 = 1
          runCmd: 
          - "modprobe overlay"
          - "modprobe br_netfilter"
          - "sysctl --system"
          - "mkdir -p /usr/local/bin"
          - curl -L "https://github.com/containerd/containerd/releases/download/v1.7.2/containerd-1.7.2-linux-amd64.tar.gz" | tar Cxvz "/usr/local"
          - curl -L "https://raw.githubusercontent.com/containerd/containerd/main/containerd.service" -o /etc/systemd/system/containerd.service
          - "mkdir -p /etc/containerd"
          - "containerd config default > /etc/containerd/config.toml"
          - "sed 's/SystemdCgroup = false/SystemdCgroup = true/g' /etc/containerd/config.toml -i"
          - "systemctl daemon-reload"
          - "systemctl enable --now containerd"
          - "mkdir -p /usr/local/sbin"
          - curl -L "https://github.com/opencontainers/runc/releases/download/v1.1.7/runc.amd64" -o /usr/local/sbin/runc
          - "chmod 755 /usr/local/sbin/runc"
          - "mkdir -p /opt/cni/bin"
          - curl -L "https://github.com/containernetworking/plugins/releases/download/v1.3.0/cni-plugins-linux-amd64-v1.3.0.tgz" | tar -C "/opt/cni/bin" -xz
          - curl -L "https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.27.0/crictl-v1.27.0-linux-amd64.tar.gz" | tar -C "/usr/local/bin" -xz
          - curl -L --remote-name-all https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubeadm -o /usr/local/bin/kubeadm
          - chmod +x /usr/local/bin/kubeadm
          - curl -L --remote-name-all https://dl.k8s.io/release/v1.26.5/bin/linux/amd64/kubelet -o /usr/local/bin/kubelet
          - chmod +x /usr/local/bin/kubelet
          - curl -sSL "https://raw.githubusercontent.com/kubernetes/release/v0.15.1/cmd/kubepkg/templates/latest/deb/kubelet/lib/systemd/system/kubelet.service" | sed "s:/usr/bin:/usr/local/bin:g" | tee /etc/systemd/system/kubelet.service
          - mkdir -p /etc/systemd/system/kubelet.service.d
          - curl -sSL "https://raw.githubusercontent.com/kubernetes/release/v0.15.1/cmd/kubepkg/templates/latest/deb/kubeadm/10-kubeadm.conf" | sed "s:/usr/bin:/usr/local/bin:g" | tee /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
          - "systemctl enable kubelet.service"

---

apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineDeployment
metadata:
  name: "${CLUSTER_NAME}"
spec:
  clusterName: "${CLUSTER_NAME}"
  replicas: 1
  selector:
    matchLabels: null
  template:
    spec:
      bootstrap:
        configRef:
          apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
          kind: KubeadmConfigTemplate
          name: worker
      clusterName: "${CLUSTER_NAME}"
      infrastructureRef:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: ProxmoxMachineTemplate
        name: ${CLUSTER_NAME}-worker
      version: v1.26.5

---

apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: KubeadmConfigTemplate
metadata:
  name: worker
spec:
  template:
    spec:
      postKubeadmCommands:
        - "curl -L https://dl.k8s.io/release/v1.27.3/bin/linux/amd64/kubectl -o /usr/local/bin/kubectl"
        - "chmod +x /usr/local/bin/kubectl"
        - "reboot now"

---

apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: ProxmoxMachineTemplate
metadata:
  name: ${CLUSTER_NAME}-worker
spec:
  template:
    spec:
      image:
        url: https://cloud-images.ubuntu.com/jammy/current/jammy-server-cloudimg-amd64-disk-kvm.img
      hardware:
        cpu: 4
        memory: 4096

---

apiVersion: v1
data:
  PROXMOX_PASSWORD: ${PROXMOX_PASSWORD_BASE64}
  PROXMOX_USER: ${PROXMOX_USER_BASE64}
  NODE_URL: ${NODE_URL_BASE64}
  NODE_USER: ${NODE_USER_BASE64}
  NODE_PASSWORD: ${NODE_PASSWORD_BASE64}
kind: Secret
metadata:
  name: "${CLUSTER_NAME}"
type: Opaque